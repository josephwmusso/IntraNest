name: Repo Sanity

on:
  push:
  pull_request:

jobs:
  sanity:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # ---- Backend (Python/FastAPI) ----
      - name: Set up Python
        if: hashFiles('backend/requirements.txt') != ''
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install backend deps
        if: hashFiles('backend/requirements.txt') != ''
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt || true

      - name: Backend lint (ruff fallback to flake8)
        if: hashFiles('backend/requirements.txt') != ''
        run: |
          if python -c "import ruff" 2>/dev/null; then
            ruff backend || true
          else
            pip install ruff || true
            ruff backend || true
          fi

      - name: Backend tests (pytest if present)
        if: hashFiles('backend/requirements.txt') != ''
        run: |
          pip install pytest || true
          if [ -d backend/tests ]; then
            pytest -q backend || true
          else
            echo "No backend/tests directory; skipping."
          fi

      # ---- Frontend (Node/React/LibreChat) ----
      - name: Set up Node
        if: hashFiles('frontend/**/package.json') != ''
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            frontend/**/package-lock.json

      - name: Frontend install
        if: hashFiles('frontend/**/package.json') != ''
        run: |
          cd frontend
          if [ -f package.json ]; then
            npm ci || npm i
            npm run build || npm run lint || true
          else
            # If subdir like frontend/LibreChat exists
            SUB=$(dirname "$(git ls-files frontend/**/package.json | head -n1)")
            cd "$SUB"
            npm ci || npm i
            npm run build || npm run lint || true
          fi

      # ---- Infrastructure sanity: YAML validation (non-fatal) ----
      - name: Lint compose files if present
        run: |
          sudo apt-get update -y && sudo apt-get install -y yamllint || true
          for f in $(git ls-files '*docker-compose*.yml' 'infrastructure/**/*.yml'); do
            echo "Checking $f"; yamllint "$f" || true
          done

      # ---- Workflows lint (non-fatal) ----
      - name: actionlint
        uses: raven-actions/actionlint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          ignore: |
            SC2086  # allow some word-splitting in shell
